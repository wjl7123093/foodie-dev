<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snow.mapper.OrdersMapperCustom">
    <resultMap id="myOrdersVO" type="com.snow.pojo.vo.MyOrdersVO">

        <id column="orderId" property="orderId" />
        <result column="createdTime" property="createdTime" />
        <result column="payMethod" property="payMethod" />
        <result column="realPayAmount" property="realPayAmount" />
        <result column="postAmount" property="postAmount" />
        <result column="orderStatus" property="orderStatus" />
        <result column="isComment" property="isComment" />

        <!--
          collection 标签：用于定义关联的 list 集合类型的封装规则
          property：对应三级分类的 list 属性名
          ofType：集合的类型，三级分类的 vo
        -->
        <collection property="subOrderItemList"
                    select="getSubItems"
                    column="orderId"
                    ofType="com.snow.pojo.vo.MySubOrderItemVO">

            <result column="itemId" property="itemId" />
            <result column="itemName" property="itemName" />
            <result column="itemImg" property="itemImg" />
            <result column="itemSpecName" property="itemSpecName" />
            <result column="buyCounts" property="buyCounts" />
            <result column="price" property="price" />

        </collection>

    </resultMap>

    <!--
        将 1 个 select 语句拆分为 2 个 select 语句，
        目的是为了避免出现前端页面展示的时候，每一页数量统计错乱。
        （不拆分的情况下，每一条不同规格的订单商品会被当作一条订单进行统计）
    -->

    <!-- 查询订单列表 -->
    <select id="queryMyOrders" resultMap="myOrdersVO" parameterType="Map">
        SELECT
            od.id as orderId,
            od.created_time as createdTime,
            od.pay_method as payMethod,
            od.real_pay_amount as realPayAmount,
            od.post_amount as postAmount,
            od.is_comment as isComment,
            os.order_status as orderStatus
        FROM
            orders od
        LEFT JOIN
            order_status os
        ON
            od.id = os.order_id
        WHERE
            od.user_id = #{paramsMap.userId}
        AND
            od.is_delete = 0
            <if test="paramsMap.orderStatus != null">
                AND os.order_status = #{paramsMap.orderStatus}
            </if>
        ORDER BY
            od.updated_time ASC
    </select>

    <!-- 查询订单商品规格列表 -->
    <select id="getSubItems" parameterType="Map" resultType="com.snow.pojo.vo.MySubOrderItemVO">
        SELECT
            oi.item_id as itemId,
            oi.item_name as itemName,
            oi.item_img as itemImg,
            oi.item_spec_name as itemSpecName,
            oi.buy_counts as buyCounts,
            oi.price as price
        FROM
            order_items oi
        WHERE
            oi.order_id = #{orderId}
    </select>

    <select id="queryMyOrdersDonotUse" resultMap="myOrdersVO" parameterType="Map">
        SELECT
            od.id as orderId,
            od.created_time as createdTime,
            od.pay_method as payMethod,
            od.real_pay_amount as realPayAmount,
            od.post_amount as postAmount,
            os.order_status as orderStatus,
            oi.item_id as itemId,
            oi.item_name as itemName,
            oi.item_img as itemImg,
            oi.item_spec_name as itemSpecName,
            oi.buy_counts as buyCounts,
            oi.price as price
        FROM
            orders od
        LEFT JOIN
            order_status os
        ON
            od.id = os.order_id
        LEFT JOIN
            order_items oi
        ON
            od.id = oi.order_id
        WHERE
            od.user_id = #{paramsMap.userId}
        AND
            od.is_delete = 0
            <if test="paramsMap.orderStatus != null">
                AND os.order_status = #{paramsMap.orderStatus}
            </if>
        ORDER BY
            od.updated_time ASC
    </select>

    <!-- 查询订单状态数 -->
    <select id="getMyOrderStatusCounts" parameterType="Map" resultType="int">
        SELECT
            count(1)
        FROM
            orders o
        LEFT JOIN
            order_status os
        ON
            o.id = os.order_id
        WHERE
            o.user_id = #{paramsMap.userId}
        AND
            os.order_status = #{paramsMap.orderStatus}
        <if test="paramsMap.isComment != null">
            AND o.is_comment = #{paramsMap.isComment}
        </if>
    </select>
    
    <select id="getMyOrderTrend" parameterType="Map" resultType="com.snow.pojo.OrderStatus">
        SELECT
            os.order_id as orderId,
            os.order_status as orderStatus,
            os.created_time as createdTime,
            os.pay_time as payTime,
            os.deliver_time as deliverTime,
            os.success_time as successTime,
            os.close_time as closeTime,
            os.comment_time as commentTime
        FROM
            orders o
        LEFT JOIN
            order_status os
        ON
            o.id = os.order_id
        WHERE
            o.is_delete = 0
        AND
            o.user_id = #{paramsMap.userId}
        AND
            os.order_status IN (20, 30, 40)
        ORDER BY
            os.order_id
        DESC
    </select>


</mapper>